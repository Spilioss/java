import java.util.*;
import java.util.stream.*;

public class Main {
    public static void main(String[] args) {
        // Χρήστες
        User u1 = new User("alice");
        User u2 = new User("bob");

        // Ταινίες
        Movie m1 = new Movie("Inception", 2010, List.of("Sci-Fi", "Action"), "Christopher Nolan");
        Movie m2 = new Movie("The Matrix", 1999, List.of("Sci-Fi", "Action"), "Wachowski Sisters");
        Movie m3 = new Movie("Titanic", 1997, List.of("Romance", "Drama"), "James Cameron");
        Movie m4 = new Movie("Interstellar", 2014, List.of("Sci-Fi", "Action"), "Christopher Nolan");

        // Κριτικές
        Review r1 = new BasicReview(u1, 9, "Mind-blowing!", m1);
        Review r2 = new VerifiedReview(u2, 10, "Masterpiece!", m1);
        Review r3 = new BasicReview(u1, 8, "Iconic!", m2);
        Review r4 = new VerifiedReview(u2, 9, "Brilliant!", m2);
        Review r5 = new BasicReview(u1, 7, "Emotional.", m3);
        Review r6 = new BasicReview(u2, 10, "Perfection.", m4);

        // Συσχέτιση reviews με ταινίες και χρήστες
        m1.addReview(r1); u1.addReview(r1);
        m1.addReview(r2); u2.addReview(r2);
        m2.addReview(r3); u1.addReview(r3);
        m2.addReview(r4); u2.addReview(r4);
        m3.addReview(r5); u1.addReview(r5);
        m4.addReview(r6); u2.addReview(r5);

        // Εκτύπωση στοιχείων
        System.out.println("--- Movie Details ---");
        m1.printDetails();
        System.out.println();
        m2.printDetails();
        System.out.println();
        m3.printDetails();
        System.out.println();
        m4.printDetails();
        System.out.println();

        System.out.println("--- User Details ---");
        u1.printDetails();
        System.out.println();
        u2.printDetails();
        System.out.println();

        System.out.println("--- Review Details ---");
        r1.printDetails();
        System.out.println();
        r2.printDetails();
        System.out.println();
        r3.printDetails();
        System.out.println();
        r4.printDetails();
        System.out.println();
        r5.printDetails();
        System.out.println();
        r6.printDetails();
        System.out.println();


        // Ταξινόμηση βάσει μέσης βαθμολογίας
        List<Movie> movies = List.of(m1, m2, m3,m4);
        List<Movie> sortedByRating = new ArrayList<>(movies);
        Collections.sort(sortedByRating, new MovieRatingComparator());
        System.out.println("--- Sorted by Average Rating ---");
        for (Movie m : sortedByRating) {
            m.printDetails();
            System.out.println();
        }

        // Ταξινόμηση βάσει έτους
        List<Movie> sortedByYear = new ArrayList<>(movies);
        Collections.sort(sortedByYear, new MovieYearComparator());
        System.out.println("--- Sorted by Year ---");
        for (Movie m : sortedByYear) {
            m.printDetails();
            System.out.println();
        }

        // Αναζήτηση βάσει είδους
        System.out.println("--- Search by Genre: Sci-Fi ---");
        List<Movie> sciFiMovies = Movie.MovieSearch.searchByGenre(movies, "Sci-Fi");
        for (Movie m : sciFiMovies) {
            m.printDetails();
            System.out.println();
        }

        //Συσχέτιση ταινιών
          Movie reference = m1;
          List<Movie> candidates = new ArrayList<>(movies);
          candidates.remove(reference);
          candidates.sort(new MovieCorrelationComparator(reference));
           List<Movie> recommendations = candidates.stream()
                                                .limit(2)
                                                .collect(Collectors.toList());

         System.out.println("--- Top Similar Movies \"" + reference.getTitle() + "\" ---");
         for (Movie m : recommendations) {
            m.printDetails()    ;
            System.out.println();
         }
        }
    }
